<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:val="http://www.springmodules.org/validation/bean"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop    
	http://www.springframework.org/schema/aop/spring-aop.xsd   
	http://www.springframework.org/schema/tx    
	http://www.springframework.org/schema/tx/spring-tx.xsd   
	http://www.springframework.org/schema/security  
    http://www.springframework.org/schema/security/spring-security.xsd
    http://www.springmodules.org/validation/bean 
    http://www.springmodules.org/validation/bean/validation.xsd
	">

	<!-- =================================数据库================================= -->
	<bean id="dataSourceConfig" abstract="true">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="preferredTestQuery" value="select 1" />
		<!--初始化时获取3个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<!--连接池中保留的最小连接数。Default: ? -->
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<!--最大空闲时间,在x秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5" />
		<!--当连接池用完时再调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。 
			单位毫秒。Default: 0 -->
		<property name="checkoutTimeout" value="50000" />
	</bean>
	<!-- 数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		parent="dataSourceConfig" destroy-method="close">
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> 
		<property name="driverClassName" value="${jdbc.driverClassName}" /> <property 
		name="url" value="${jdbc.url}" /> <property name="username" value="${jdbc.username}" 
		/> <property name="password" value="${jdbc.password}" /> <property name="maxActive" 
		value="${jdbc.maxActive}" /> <property name="maxWait" value="${jdbc.maxWait}" 
		/> <property name="poolPreparedStatements" value="${jdbc.poolPerparedStatements}" 
		/> <property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}" /> 
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" /> <property name="testWhileIdle" 
		value="${jdbc.testWhileIdle}" /> <property name="maxIdle" value="${jdbc.maxIdle}" 
		/> <property name="minIdle" value="${jdbc.minIdle}" /> <property name="validationQuery" 
		value="${jdbc.validationQuery}" /> <property name="removeAbandoned" value="${jdbc.removeAbandoned}" 
		/> <property name="logAbandoned" value="${jdbc.logAbandoned}" /> <property 
		name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" /> </bean> -->

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 声明式注解事务配置 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:mybatis/${app.name}-sqlMapConfig.xml" />
		<property name="mapperLocations">
			<array>
				<value>classpath:mybatis/base/*.xml</value>
				<value>classpath:mybatis/ext/*.xml</value>
			</array>
		</property>
	</bean>

	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.laiju.app.api.mapper" />
	</bean>

</beans>